import datetime
import json

from aiohttp import ClientSession

from weather_tg_bot.config import config

CODE_TO_SMILE = {
        "Clear": "–Ø—Å–Ω–æ ‚òÄÔ∏è",
        "Clouds": "–û–±–ª–∞—á–Ω–æ ‚òÅÔ∏è",
        "Rain": "–î–æ–∂–¥—å üåß",
        "Drizzle": "–î–æ–∂–¥—å üåß",
        "Thunderstorm": "–ì—Ä–æ–∑–∞ ‚õà",
        "Snow": "–°–Ω–µ–≥ ‚ùÑÔ∏è",
        "Mist": "–¢—É–º–∞–Ω üå´",
    }


class WeatherParser:
    """–ü–∞—Ä—Å–µ—Ä –ø–æ–≥–æ–¥—ã."""

    async def init(self) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Å–µ—Ä–∞."""
        self.session = ClientSession()

    async def get_weather(self, city: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É.

        Returns:
            –ü–æ–≥–æ–¥—É –≤ —É–∫–∞–∑–∞–Ω–æ–º –≥–æ—Ä–æ–¥–µ.

        """
        try:
            url = "http://api.openweathermap.org/data/2.5/weather"
            params = {
                "q": city,
                "appid": config.open_weather_token,
                "units": "metric",
            }
            async with self.session.get(url, params=params) as r:
                data = json.loads(await r.text())

            city = data["name"]
            cur_weather = data["main"]["temp"]

            weather_description = data["weather"][0]["main"]
            wd = CODE_TO_SMILE.get(weather_description, weather_description)

            humidity = data["main"]["humidity"]
            pressure = data["main"]["pressure"]
            wind = data["wind"]["speed"]
            sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
            sunset_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
            length_of_the_day = datetime.datetime.fromtimestamp(
                data["sys"]["sunset"],
            ) - datetime.datetime.fromtimestamp(
                data["sys"]["sunrise"],
            )

            return (
                f"{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}\n\n"
                f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n"
                f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}C¬∞ {wd}\n"
                f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                f"–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n"
                f"–í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
                f"–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp}\n"
                f"–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}\n"
                f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_the_day}\n"
            )

        except Exception as e:  # noqa: BLE001
            return f"–í–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n\n{e}"
